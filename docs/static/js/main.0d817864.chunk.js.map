{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","GifItem","title","url","src","alt","getGifs","category","a","fetch","encodeURI","res","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA0BeA,EAvBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAa1C,OACC,0BAAMC,UAAU,OAAOC,SARH,SAACC,GACrBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC9BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,OACxCP,EAAc,OAKd,2BAAOC,UAAU,eAAeO,KAAK,OAAOC,YAAY,gBAAgBC,MAAOX,EAAYY,SAZpE,SAACR,GACzBH,EAAcG,EAAES,OAAOF,YCIVG,EATC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACzB,OACC,yBAAKd,UAAU,QACd,yBAAKe,IAAKD,EAAKE,IAAKH,IACpB,2BAAIA,K,uBCNMI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACN,mCACF,GAFQ,SAGJC,MAAM,0CAAD,OAA2CC,UAAUH,GAArD,kBADT,GACS,oBAFP,qCADM,cAGhBI,EAHgB,gBAICA,EAAIC,OAJL,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAVd,kBAcfW,GAde,4CAAH,sDCoBLM,EAhBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACfrB,mBAAS,CAClC2B,KAAM,GACNQ,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACTlB,EAAQC,GAAUkB,MAAK,SAACC,GAAD,OACtBH,EAAS,CACRV,KAAMa,EACNL,SAAS,SAGT,CAACd,IAEGe,EDZ2BK,CAAapB,GAAjCW,EADmB,EACzBL,KAAcQ,EADW,EACXA,QAEtB,OACC,oCACC,wBAAIhC,UAAU,+CAA+CkB,GAC5Dc,GAAW,aACZ,yBAAKhC,UAAU,+CACb6B,EAAOH,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eAASY,IAAKZ,EAAIC,IAAQD,UEOhBa,EAhBM,WAAO,IAAD,EACU3C,mBAAS,IADnB,mBACnB4C,EADmB,KACP7C,EADO,KAG1B,OACC,oCACC,yBAAKI,UAAU,aACd,wBAAIA,UAAU,SAAd,gBACA,kBAAC,EAAD,CAAaJ,cAAeA,IAC3B6C,EAAWf,KAAI,SAACR,GAAD,OACf,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UCRvCwB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.0d817864.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setinputValue] = useState('')\r\n\r\n\tconst handleInputValue = (e) => {\r\n\t\tsetinputValue(e.target.value)\r\n\t}\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cats) => [inputValue, ...cats])\r\n\t\t\tsetinputValue('')\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<form className=\"form\" onSubmit={handleSubmit}>\r\n\t\t\t<input className=\"form-control\" type=\"text\" placeholder=\"Search Gif...\" value={inputValue} onChange={handleInputValue} />\r\n\t\t</form>\r\n\t)\r\n}\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GifItem\r\n","export const getGifs = async (category) => {\r\n\tconst API_URL = 'QvOWAKK2Tqq2PSpYOdWapfm0V1yOg5vT'\r\n\tconst limit = 10\r\n\tconst res = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${API_URL}`)\r\n\tconst { data } = await res.json()\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs\r\n}\r\n","import React from 'react'\r\nimport GifItem from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"gif-title animate__animated animate__bounce\">{category}</h3>\r\n\t\t\t{loading && 'Cargando..'}\r\n\t\t\t<div className=\"card-grid animate__animated animate__fadeIn\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) =>\r\n\t\t\tsetstate({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t})\r\n\t\t)\r\n\t}, [category])\r\n\r\n\treturn state //{ data: [], loading: true }\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './Components/AddCategory'\r\nimport GifGrid from './Components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState([])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1 className=\"title\">GifExpertApp</h1>\r\n\t\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}